# Push new bumped semantic version tag when pull request merged to main branch

name: Release

# Run on every push to main 
# (using PR closed event won't allow to push tags if PR is coming from a fork)
on:
  push:
    branches: [main]

# Permission to push tag
permissions:
  contents: write

jobs:
  release-github:
    runs-on: ubuntu-latest

    steps:
      - name: Get pull request that was merged (pushed commit) into base default (main) branch
        uses: actions-ecosystem/action-get-merged-pull-request@v1
        id: get-merged-pull-request
        with:
          github_token: ${{ secrets.PAT_TOKEN }}

      - name: Get semver level from pull request labels
        # Continue only with pull request (title not null)
        if: ${{ steps.get-merged-pull-request.outputs.title != null }}
        uses: actions-ecosystem/action-release-label@v1
        id: release-label
        with:
          label_prefix: ''
          labels: ${{ steps.get-merged-pull-request.outputs.labels }}

      - name: Checkout code
        # Continue only with semver level from pull request
        if: ${{ steps.release-label.outputs.level != null }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Get current version (latest semver tag)
        # Continue only with semver level from pull request
        if: ${{ steps.release-label.outputs.level != null }}
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
          # Generate initial semver tag if none is found (v0.0.0)
          with_initial_version: true
          initial_version: 'v0.0.0'
          # Get only semver tag (with prefix 'v'')
          semver_only: true

      - name: Get new version (semver tag bump)
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        if: ${{ steps.release-label.outputs.level != null }}
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ steps.release-label.outputs.level }}

      - name: Import GPG key
        # Continue only with new semver tag (skip if no semver bump)
        if: ${{ steps.bump-semver.outputs.new_version != null }}
        uses: crazy-max/ghaction-import-gpg@v6
        id: import-gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Setup git credentials
        if: ${{ steps.bump-semver.outputs.new_version != null && steps.import-gpg.outputs.keyid != null }}
        shell: bash
        run: |
          git config user.email "${{ secrets.USER_EMAIL }}"
          git config user.name "${{ secrets.USER_NAME }}"
          
      - name: Create new (signed) tag
        if: ${{ steps.bump-semver.outputs.new_version != null && steps.import-gpg.outputs.keyid != null }}
        shell: bash
        run: |
          tag=${{ steps.bump-semver.outputs.new_version }}
          keyid=${{ steps.import-gpg.outputs.keyid }}
          git tag -u ${keyid} "${tag}" -m "Release ${tag}"

      - name: Push tag
        if: ${{ steps.bump-semver.outputs.new_version != null && steps.import-gpg.outputs.keyid != null }}
        shell: bash
        run: |
          tag=${{ steps.bump-semver.outputs.new_version }}
          git push origin "${tag}"
